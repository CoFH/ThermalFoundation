{
  "name": "Пользовательские улучшения",
  "icon": "minecraft:potato",
  "category": "thermal:modpack",
  "read_by_default": true,
  "pages": [
    {
      "type": "patchouli:text",
      "text": "Система улучшений была создана с учётом модульности, настраиваемости и гибкости. Улучшения основаны на NBT, что означает, можно назначить любые модификаторы и значения, изменив NBT-данные. Другими словами, в улучшениях, которые предоставляет Thermal, нет ничего особенного - буквально любой предмет может быть улучшением, при условии, что у него есть соответствующие NBT-данные."
    },
    {
      "type": "patchouli:text",
      "text": "Улучшения имеют тип и модификаторы. Тип определяет, где улучшение будет использоваться, а также может влиять на возможность складывания. Читайте $(l:thermal:technology/augments/introduction)введение в улучшения$(/l) для получения более подробной информации. Если тип не указан, то на улучшение не накладывается никаких ограничений."
    },
    {
      "type": "patchouli:text",
      "text": "Модификаторы назначаются предмету с помощью пар атрибут-значение, где атрибут является модификатором, а значение - суммой модификатора. Все значения являются плавающими, даже если модификатор предполагает, что они должны быть целыми (например, сила зелья). Подробнее об этом позже."
    },
    {
      "type": "link",
      "url": "https://github.com/CoFH/CoFHCore/blob/1.18.2/src/main/java/cofh/lib/util/constants/NBTTags.java#L102",
      "link_text": "Ссылка на Github",
      "text": "Общая форма NBT выглядит следующим образом: $(br2){AugmentData:$(br){Type:'[augment type]',$(br)[modifier 1]:[float value]f, $(br)[modifier 2]:[float value]f, $(br)[...]}}$(br2)Полный список доступных типов дополнений и модификаторов можно найти на Github-е Кинга Лемминга; Ссылка внизу. "
    },
    {
      "type": "patchouli:text",
      "text": "Хорошо, например, команда для создания улучшения, которое делает требуемую энергию всех рецептов равной 0 (по сути, творческое улучшение), выглядит следующим образом (нажмите, чтобы выполнить команду): $(br)$(c:/summon minecraft:item ~ ~ ~ {Item:{id:'minecraft:sea_pickle',Count:1b,tag:{AugmentData:{Type:'MchAug',MchEn:0.0f}}}})/give $(playername) minecraft:sea_pickle{AugmentData:{Type:'MchAug',MchEn:0.0f}} 1$(/c)$(br)Если существует несколько пар значение-модификатор с одним и тем же модификатором, приоритет имеет тот, который идёт последним."
    },
    {
      "type": "patchouli:text",
      "title": "Примечание по сложению",
      "text": "Некоторые модификаторы не поддаются складыванию - то есть, если несколько дополнений одного и того же инструмента/блока имеют один и тот же модификатор, приоритет будет иметь наибольшее значение. Значения этих модификаторов подчёркнуты. Складываемость - это черта, присущая типу модификатора; например, максимальные никогда не будут складываться, а радиуса - всегда будут складываться, независимо от значений."
    },
    {
      "type": "patchouli:text",
      "title": "Заметки",
      "text": "Все значения вводятся в виде чисел с плавающей точкой. Это вызывает некоторые интересные взаимодействия с модификаторами, которые кажутся неотъемлемыми. В этих ситуациях улучшение будет отображать значение в виде входного значения с плавающей точкой, округлённого до ближайшего целого числа. Однако фактическое поведение инструмента/блока может отличаться в зависимости от модификатора/значения."
    }
  ]
}